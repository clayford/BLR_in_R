## CODE ALONG 0

Enter a new code chunk and run the code `rbinom(n = 10, size = 1, prob = 0.5)`. This generates random values from Binomial Distribution with trial size = 1 and probability = 0.5. (this is like flipping a fair coin 10 times)

rbinom(n = 10, size = 1, prob = 0.5)

## CODE ALONG 1
- create a cross tabulation of admit and died
- Plot `died` as a function of `systolic`.
- Plot `systolic` as a function of `died` (stripchart).

xtabs(~ admit + died, data = icu)
plot(died ~ systolic, data = icu)
stripchart(systolic ~ died, data = icu, method = "jitter")

## CODE ALONG 2

- Model died as a function of age, admit and uncons. Save the model as `m2`.
- Use `summary()` and `confint()` on the model
- Interpret the coefficient for admit as an odds ratio
- What's the predicted probability of dying for a person age 50, Emergency admission, and unconscious?

m2 <- glm(died ~ age + admit + uncons, data = icu, 
          family = binomial)
          
summary(m2)
confint(m2)

exp(coef(m2))
exp(confint(m2))
Odds of dying are about 10 times higher when admission is due to Emergency as opposed to Elective, or at least 2.7 times higher.

predict(m2, newdata = data.frame(age = 50, admit = "Emergency", 
                                 uncons = "Yes"),
        type = "response")
        
## CODE ALONG 3

Assess model `m2` using the methods we just described.

anova(m2, test = "Chisq")
LRstats(m2)


## CODE ALONG 4

- Fit a new model with the following formula and save as `m4`:
  `died ~ age + admit + uncons + age:uncons`   
- Visualize the interaction.

Add a new R code chunk by clicking the *Insert Chunk* button on the toolbar or by pressing *Ctrl+Alt+I* (Win/Linux) or *Cmd+Option+I* (Mac).


m4 <- glm(died ~ age + admit + uncons + age:uncons,
          data = icu, family = binomial)
confint(m4)

predict_response(m4, terms = c("age", "uncons")) |> plot()




